{"mappings":"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","sources":["<anon>","src/index.ts"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const makeDizzyTrack = (callback)=>{\n        const SCORE_CNT = 4;\n        const SCORE_THRESH = 11;\n        const SCORE_K = 20;\n        let nextScore = 0;\n        const scores = [];\n        let prevX = 0;\n        let prevY = 0;\n        const tick = ()=>{\n            scores.push(nextScore);\n            nextScore = 0;\n            while(scores.length > SCORE_CNT)scores.shift();\n            const score = scores.reduce((a, b)=>a + b, 0);\n            if (Math.abs(score) >= SCORE_THRESH) callback(score > 0 ? 1 : -1);\n            else callback(0);\n        };\n        setInterval(tick, 750);\n        return (x, y)=>{\n            const kxy1 = SCORE_K * Math.sqrt(SCORE_K ** 2 * (x ** 2 + y ** 2) + 1);\n            const p = -Math.log(kxy1 + SCORE_K ** 2 * y);\n            const q = Math.log(kxy1 + SCORE_K ** 2 * x);\n            const dx = x - prevX;\n            const dy = y - prevY;\n            nextScore += p * dx + q * dy;\n            prevX = x;\n            prevY = y;\n        };\n    };\n    const $faceArea = document.getElementById(\"oo_face_area\");\n    const getOOArea = ()=>$faceArea.getBoundingClientRect();\n    const $oo = document.getElementById(\"oo\");\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    const $eye1 = $oo.getElementById(\"eye_black_1\");\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    const $eye2 = $oo.getElementById(\"eye_black_2\");\n    const moveEyes = (r, theta)=>{\n        const dx = r * Math.cos(theta);\n        const dy = r * Math.sin(theta) * 1.1;\n        $eye1.setAttribute(\"x\", `${dx}`);\n        $eye1.setAttribute(\"y\", `${dy}`);\n        $eye2.setAttribute(\"x\", `${dx}`);\n        $eye2.setAttribute(\"y\", `${dy}`);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    const $eye0 = $oo.getElementById(\"eye_black\");\n    const dizzyTrack = makeDizzyTrack((sign)=>{\n        const className = sign === 0 ? \"\" : sign > 0 ? \"rot-clock\" : \"rot-anticlock\";\n        if ($eye0.getAttribute(\"class\") !== className) $eye0.setAttribute(\"class\", className);\n    });\n    const eyeTrack = (mx, my)=>{\n        const { left, top, width, height } = getOOArea();\n        const dx = mx - (left + width / 2);\n        const dy = my - (top + height / 2);\n        const r = Math.sqrt(dx * dx + dy * dy) / width;\n        moveEyes(25 * Math.atan(r * 2), Math.atan2(dy, dx));\n        dizzyTrack(dx / width, dy / height);\n    };\n    window.addEventListener(\"mousemove\", (ev)=>{\n        eyeTrack(ev.clientX, ev.clientY);\n    });\n    window.addEventListener(\"touchstart\", (ev)=>{\n        eyeTrack(ev.touches[0].clientX, ev.touches[0].clientY);\n    });\n    window.addEventListener(\"touchmove\", (ev)=>{\n        eyeTrack(ev.touches[0].clientX, ev.touches[0].clientY);\n    });\n    const $ooArea = document.getElementsByClassName(\"oo-area\")[0];\n    const $fullscreenButton = document.getElementById(\"btn_fullscreen\");\n    if (document.fullscreenEnabled) $fullscreenButton.addEventListener(\"click\", ()=>{\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n            return;\n        }\n        $ooArea.requestFullscreen();\n    });\n    else $fullscreenButton.style.display = \"none\";\n});\n\n//# sourceMappingURL=index.4be13e20.js.map\n","document.addEventListener(\"DOMContentLoaded\", () => {\n  const makeDizzyTrack = (callback: (sign: -1 | 0 | 1) => void) => {\n    const SCORE_CNT = 4;\n    const SCORE_THRESH = 11;\n    const SCORE_K = 20;\n\n    let nextScore = 0;\n    const scores: number[] = [];\n    let prevX = 0;\n    let prevY = 0;\n\n    const tick = () => {\n      scores.push(nextScore);\n      nextScore = 0;\n      while (scores.length > SCORE_CNT) {\n        scores.shift();\n      }\n\n      const score = scores.reduce((a, b) => a + b, 0);\n      if (Math.abs(score) >= SCORE_THRESH) {\n        callback(score > 0 ? 1 : -1);\n      } else {\n        callback(0);\n      }\n    };\n    setInterval(tick, 750);\n\n    return (x: number, y: number) => {\n      const kxy1 = SCORE_K * Math.sqrt(SCORE_K ** 2 * (x ** 2 + y ** 2) + 1);\n      const p = -Math.log(kxy1 + SCORE_K ** 2 * y);\n      const q = Math.log(kxy1 + SCORE_K ** 2 * x);\n      const dx = x - prevX;\n      const dy = y - prevY;\n      nextScore += p * dx + q * dy;\n      prevX = x;\n      prevY = y;\n    };\n  };\n\n  const $faceArea = document.getElementById(\"oo_face_area\")!;\n  const getOOArea = () => $faceArea.getBoundingClientRect();\n\n  const $oo = document.getElementById(\"oo\")! as Element as SVGSVGElement;\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  const $eye1 = $oo.getElementById(\"eye_black_1\")! as SVGUseElement;\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  const $eye2 = $oo.getElementById(\"eye_black_2\")! as SVGUseElement;\n  const moveEyes = (r: number, theta: number) => {\n    const dx = r * Math.cos(theta);\n    const dy = r * Math.sin(theta) * 1.1;\n    $eye1.setAttribute(\"x\", `${dx}`);\n    $eye1.setAttribute(\"y\", `${dy}`);\n    $eye2.setAttribute(\"x\", `${dx}`);\n    $eye2.setAttribute(\"y\", `${dy}`);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  const $eye0 = $oo.getElementById(\"eye_black\")! as SVGElement;\n  const dizzyTrack = makeDizzyTrack((sign) => {\n    const className =\n      sign === 0 ? \"\" : sign > 0 ? \"rot-clock\" : \"rot-anticlock\";\n    if ($eye0.getAttribute(\"class\") !== className) {\n      $eye0.setAttribute(\"class\", className);\n    }\n  });\n\n  const eyeTrack = (mx: number, my: number) => {\n    const { left, top, width, height } = getOOArea();\n    const dx = mx - (left + width / 2);\n    const dy = my - (top + height / 2);\n    const r = Math.sqrt(dx * dx + dy * dy) / width;\n    moveEyes(25 * Math.atan(r * 2), Math.atan2(dy, dx));\n    dizzyTrack(dx / width, dy / height);\n  };\n  window.addEventListener(\"mousemove\", (ev) => {\n    eyeTrack(ev.clientX, ev.clientY);\n  });\n  window.addEventListener(\"touchstart\", (ev) => {\n    eyeTrack(ev.touches[0].clientX, ev.touches[0].clientY);\n  });\n  window.addEventListener(\"touchmove\", (ev) => {\n    eyeTrack(ev.touches[0].clientX, ev.touches[0].clientY);\n  });\n\n  const $ooArea = document.getElementsByClassName(\"oo-area\")[0];\n  const $fullscreenButton = document.getElementById(\"btn_fullscreen\")!;\n  if (document.fullscreenEnabled) {\n    $fullscreenButton.addEventListener(\"click\", () => {\n      if (document.fullscreenElement) {\n        void document.exitFullscreen();\n        return;\n      }\n      void $ooArea.requestFullscreen();\n    });\n  } else {\n    $fullscreenButton.style.display = \"none\";\n  }\n});\n"],"names":["document","addEventListener","$faceArea","getElementById","getOOArea","getBoundingClientRect","$oo","$eye1","$eye2","moveEyes","r","theta","dx","Math","cos","dy","sin","setAttribute","$eye0","dizzyTrack","makeDizzyTrack","callback","nextScore","scores","prevX","prevY","setInterval","push","length","shift","score","reduce","a","b","abs","x","y","kxy1","SCORE_K","sqrt","p","log","q","sign","className","getAttribute","eyeTrack","mx","my","left","top","width","height","atan","atan2","window","ev","clientX","clientY","touches","$ooArea","getElementsByClassName","$fullscreenButton","fullscreenEnabled","fullscreenElement","exitFullscreen","requestFullscreen","style","display"],"version":3,"file":"index.4be13e20.js.map"}