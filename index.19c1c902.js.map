{"mappings":"AAAA,CACI,MAAMA,EAAkBC,IAKpB,IAAIC,EAAY,EAChB,MAAMC,EAAmB,GACzB,IAAIC,EAAQ,EACRC,EAAQ,EAkBZ,OAFAC,aAdU,SACNH,EAAOI,KAAKL,GACZA,EAAY,EACLC,EAAOK,OAZA,GAaVL,EAAOM,QAGX,MAAMC,EAAQP,EAAOQ,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,GAAG,GACzCC,KAAKC,IAAIL,IAhBI,GAiBbT,EAASS,EAAQ,EAAI,GAAI,GAEzBT,EAAS,KAGC,KAEZ,CAAEe,EAAWC,KACf,MAAMC,EAxBM,GAwBWJ,KAAKK,KAAKC,KAAgBJ,GAAK,EAAIC,GAAK,GAAK,GAC9DI,GAAKP,KAAKQ,IAAIJ,EAAOE,IAAeH,GACpCM,EAAIT,KAAKQ,IAAIJ,EAAOE,IAAeJ,GAGzCd,GAAamB,GAFFL,EAAIZ,GAEOmB,GADXN,EAAIZ,GAEfD,EAAQY,EACRX,EAAQY,IAGhBO,SAASC,iBAAiB,oBAAkB,KACxC,MAAMC,EAAYF,SAASG,eAAe,gBACpCC,EAAQJ,SAASG,eAAe,eAChCE,EAAQL,SAASG,eAAe,eAUhCG,EAAQN,SAASG,eAAe,aAChCI,EAAa/B,GAAgBgC,IAC/B,MAAMC,EAAqB,IAATD,EAAa,GAAKA,EAAO,EAAI,YAAc,gBACzDF,EAAMI,aAAa,WAAaD,GAChCH,EAAMK,aAAa,QAASF,MAG9BG,EAAQ,CAAIC,EAAYC,KAC1B,MAAMC,KAAEA,EAAIC,IAAEA,EAAGC,MAAEA,EAAKC,OAAEA,GAjBNhB,EAAUiB,wBAkBxBC,EAAKP,GAAME,EAAOE,EAAQ,GAC1BI,EAAKP,GAAME,EAAME,EAAS,GAC1BI,EAAIhC,KAAKK,KAAKyB,EAAKA,EAAKC,EAAKA,GAAMJ,EAnB/B,EAAIK,EAAWC,KACzB,MAAMH,EAAKE,EAAIhC,KAAKkC,IAAID,GAClBF,EAAKC,EAAIhC,KAAKmC,IAAIF,GAAS,IACjCnB,EAAMO,aAAa,IAAG,GAAKS,KAC3BhB,EAAMO,aAAa,IAAG,GAAKU,KAC3BhB,EAAMM,aAAa,IAAG,GAAKS,KAC3Bf,EAAMM,aAAa,IAAG,GAAKU,MAc3BK,CAAS,GAAKpC,KAAKqC,KAAS,EAAJL,GAAQhC,KAAKsC,MAAMP,EAAID,IAC/Cb,EAAWa,EAAKH,EAAOI,EAAKH,IAEhCW,OAAO5B,iBAAiB,aAAc6B,IAClClB,EAASkB,EAAGC,QAASD,EAAGE,YAE5BH,OAAO5B,iBAAiB,cAAe6B,IACnClB,EAASkB,EAAGG,QAAQ,GAAGF,QAASD,EAAGG,QAAQ,GAAGD,YAElDH,OAAO5B,iBAAiB,aAAc6B,IAClClB,EAASkB,EAAGG,QAAQ,GAAGF,QAASD,EAAGG,QAAQ,GAAGD","sources":["src/index.ts"],"sourcesContent":["{\n    const makeDizzyTrack = (callback: (sign: -1 | 0 | 1) => void) => {\n        const SCORE_CNT = 4;\n        const SCORE_THRESH = 11;\n        const SCORE_K = 20;\n\n        let nextScore = 0;\n        const scores: number[] = [];\n        let prevX = 0;\n        let prevY = 0;\n\n        const tick = () => {\n            scores.push(nextScore);\n            nextScore = 0;\n            while (scores.length > SCORE_CNT) {\n                scores.shift();\n            }\n\n            const score = scores.reduce((a, b) => a + b, 0);\n            if (Math.abs(score) >= SCORE_THRESH) {\n                callback(score > 0 ? 1 : -1);\n            } else {\n                callback(0);\n            }\n        };\n        setInterval(tick, 750);\n\n        return (x: number, y: number) => {\n            const kxy1 = SCORE_K * Math.sqrt(SCORE_K ** 2 * (x ** 2 + y ** 2) + 1);\n            const p = -Math.log(kxy1 + SCORE_K ** 2 * y);\n            const q = Math.log(kxy1 + SCORE_K ** 2 * x);\n            const dx = x - prevX;\n            const dy = y - prevY;\n            nextScore += p * dx + q * dy;\n            prevX = x;\n            prevY = y;\n        };\n    }\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        const $faceArea = document.getElementById(\"oo_face_area\")!;\n        const $eye1 = document.getElementById(\"eye_black_1\")! as Element as SVGUseElement;\n        const $eye2 = document.getElementById(\"eye_black_2\")! as Element as SVGUseElement;\n        const getOOArea = () => $faceArea.getBoundingClientRect();\n        const moveEyes = (r: number, theta: number) => {\n            const dx = r * Math.cos(theta);\n            const dy = r * Math.sin(theta) * 1.1;\n            $eye1.setAttribute(\"x\", `${dx}`);\n            $eye1.setAttribute(\"y\", `${dy}`);\n            $eye2.setAttribute(\"x\", `${dx}`);\n            $eye2.setAttribute(\"y\", `${dy}`);\n        };\n        const $eye0 = document.getElementById(\"eye_black\")! as Element as SVGElement;\n        const dizzyTrack = makeDizzyTrack((sign) => {\n            const className = sign === 0 ? \"\" : sign > 0 ? \"rot-clock\" : \"rot-anticlock\";\n            if ($eye0.getAttribute(\"class\") !== className) {\n                $eye0.setAttribute(\"class\", className);\n            }\n        });\n        const eyeTrack = (mx: number, my: number) => {\n            const { left, top, width, height } = getOOArea();\n            const dx = mx - (left + width / 2);\n            const dy = my - (top + height / 2);\n            const r = Math.sqrt(dx * dx + dy * dy) / width;\n            moveEyes(25 * Math.atan(r * 2), Math.atan2(dy, dx));\n            dizzyTrack(dx / width, dy / height);\n        };\n        window.addEventListener(\"mousemove\", (ev) => {\n            eyeTrack(ev.clientX, ev.clientY);\n        });\n        window.addEventListener(\"touchstart\", (ev) => {\n            eyeTrack(ev.touches[0].clientX, ev.touches[0].clientY);\n        });\n        window.addEventListener(\"touchmove\", (ev) => {\n            eyeTrack(ev.touches[0].clientX, ev.touches[0].clientY);\n        });\n    });\n}\n"],"names":["makeDizzyTrack","callback","nextScore","scores","prevX","prevY","setInterval","push","length","shift","score","reduce","a","b","Math","abs","x","y","kxy1","sqrt","SCORE_K","p","log","q","document","addEventListener","$faceArea","getElementById","$eye1","$eye2","$eye0","dizzyTrack","sign","className","getAttribute","setAttribute","eyeTrack","mx","my","left","top","width","height","getBoundingClientRect","dx","dy","r","theta","cos","sin","moveEyes","atan","atan2","window","ev","clientX","clientY","touches"],"version":3,"file":"index.19c1c902.js.map"}